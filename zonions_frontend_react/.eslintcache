[{"F:\\WishtreeProject\\zonions_frontend_react\\src\\index.js":"1","F:\\WishtreeProject\\zonions_frontend_react\\src\\App.js":"2","F:\\WishtreeProject\\zonions_frontend_react\\src\\reportWebVitals.js":"3","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\HomePage.js":"4","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\RestaurantDetails.js":"5","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\AdminLogin.js":"6","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\AdminPage.js":"7"},{"size":1063,"mtime":1608121099020,"results":"8","hashOfConfig":"9"},{"size":835,"mtime":1608136881482,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1568,"mtime":1608137119992,"results":"12","hashOfConfig":"9"},{"size":1561,"mtime":1608141285512,"results":"13","hashOfConfig":"9"},{"size":2038,"mtime":1608121889755,"results":"14","hashOfConfig":"9"},{"size":8314,"mtime":1608140755719,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pyhbe6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"F:\\WishtreeProject\\zonions_frontend_react\\src\\index.js",[],["34","35"],"F:\\WishtreeProject\\zonions_frontend_react\\src\\App.js",["36","37","38","39","40","41","42","43","44","45"],"F:\\WishtreeProject\\zonions_frontend_react\\src\\reportWebVitals.js",[],"F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\HomePage.js",["46","47","48","49","50"],"import React, { useState, useEffect } from 'react';\r\nimport restaurantIcon from '../Icons/Rectangle.png'\r\nimport './ComponentStyles.css';\r\nimport '../App.css'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardText, MDBCardTitle, MDBCol } from 'mdbreact';\r\nimport Axios from 'axios';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport restIcon from '../Icons/restIcon.png'\r\n\r\nfunction HomePage() {\r\n\r\n\r\n    let history = useHistory()//for routing pages\r\n\r\n    const [restaurantData, setrestaurantData] = useState([])// for storing restaurants\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:1337/restaurant').then(response =>\r\n            setrestaurantData(response.data)\r\n        )\r\n    }, [])\r\n\r\n\r\n    //pushing the selected restaurant id to details page\r\n    const details = (id) => {\r\n        history.push({ pathname: `/details/${id}` })\r\n    }\r\n\r\n\r\n    //contains restaurant names by iterating the data\r\n    return (\r\n\r\n\r\n        <div className=\"homepage\">\r\n\r\n            <MDBCol>\r\n\r\n                {restaurantData.map(data => (\r\n\r\n                    <MDBCard style={{ width: \"11rem\" }} className=\"card\" key={data.id}>\r\n\r\n                        <MDBCardImage className=\"img-fluid\" src={restIcon} waves />\r\n\r\n                        <MDBCardBody>\r\n                            <p onClick={() => details(data.id)}><b>{data.name}</b></p>\r\n                        </MDBCardBody>\r\n\r\n                    </MDBCard>\r\n\r\n                ))}\r\n\r\n            </MDBCol>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\RestaurantDetails.js",["51","52","53","54"],"F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\AdminLogin.js",["55","56","57","58","59","60","61","62","63","64","65","66"],"import React, { Component, useState } from 'react';\r\nimport {\r\n\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBBtn\r\n\r\n} from \"mdbreact\";\r\n\r\n\r\nimport AdminPage from './AdminPage';\r\nimport './ComponentStyles.css'\r\nimport { Route, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction AdminLogin(props) {\r\n\r\n  const [username, setUsername] = useState('')//for maintaining username\r\n\r\n  const [password, setPassword] = useState('')// for maintaining password\r\n\r\n  const history = useHistory()//for routing using push method\r\n\r\n\r\n\r\n  //handler to get input values in states\r\n  const handler = (event) => {\r\n    if (event.target.name == \"username\") {\r\n      setUsername(event.target.value)\r\n    }\r\n\r\n    if (event.target.name == \"password\") {\r\n      setPassword(event.target.value)\r\n    }\r\n  }\r\n\r\n\r\n  //to check username and password matching or not manually\r\n  const submit = (event) => {\r\n\r\n\r\n    if (username == \"admin@gmail.com\" && password == \"Admin@123\") {\r\n\r\n      history.push({ pathname: '/admin' })\r\n\r\n    }\r\n\r\n    else {\r\n      event.preventDefault()\r\n      alert(\"Incorrect Username/Password\")\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-lg-4\"></div>\r\n\r\n        <div className=\"col-lg-4 login\">\r\n\r\n          <form>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Email</label>\r\n              <input type=\"email\" class=\"form-control\" name=\"username\" aria-describedby=\"emailHelp\" pattern=\"[a-zA-Z]{2,}\" placeholder=\"Enter email\" value={username} onChange={handler} />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Password</label>\r\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"password\" value={password} onChange={handler} />\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-secondary btn-block\" onClick={submit}>Login</button>\r\n\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default AdminLogin\r\n","F:\\WishtreeProject\\zonions_frontend_react\\src\\Components\\AdminPage.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './ComponentStyles.css'\r\nimport {\r\n\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBBtn\r\n\r\n} from \"mdbreact\";\r\n\r\nimport TimePicker from 'react-time-picker';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction AdminPage() {\r\n\r\n  const [data, setData] = useState([])//for maintaining all restaurant data from rest api\r\n\r\n  const [modal, setModal] = useState(false)// for modal maintaing\r\n\r\n  //bellow all states are used for maintaining inputs by user\r\n  const [id, setId] = useState('')\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const [address, setAddress] = useState('')\r\n\r\n  const [phone, setPhone] = useState('')\r\n\r\n  const [opening, setOpening] = useState('')\r\n\r\n  const [closing, setClosing] = useState('')\r\n\r\n  const [flag, setFlag] = useState(false)\r\n\r\n  const [menu, setMenu] = useState('');\r\n\r\n  let valid = true;\r\n\r\n  var link = \"\";\r\n\r\n\r\n  //for modal open and close\r\n  const toggleModal = () => {\r\n    setModal(!modal)\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  //for deleting restuarant from database using api\r\n  const delet = (id) => {\r\n\r\n    if (window.confirm(\"Are you sure you want to delete\")) {\r\n      Axios.delete(`http://localhost:1337/restaurant/${id}`).then(response =>\r\n        console.log(response))\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //for displaying existing update restaurant details on update screen\r\n  const edit = (restaurant) => {\r\n\r\n    setId(restaurant.id)\r\n    setName(restaurant.name)\r\n    setAddress(restaurant.restaurantDetail.address)\r\n    setOpening(restaurant.restaurantDetail.opening)\r\n    setClosing(restaurant.restaurantDetail.closing)\r\n    setPhone(restaurant.restaurantDetail.phone)\r\n    setMenu(JSON.parse(restaurant.restaurantDetail.menu))\r\n\r\n    setFlag(true)\r\n\r\n    toggleModal()\r\n  }\r\n\r\n\r\n  //getting image url & converting to binary format and providing data in string format\r\n  const imgupload = async (e) => {\r\n    const menuImg = e.target.files[0];//get image\r\n\r\n    const binary = await convert(menuImg)//binary format\r\n    setMenu(binary);\r\n\r\n  }\r\n\r\n  // for converting image url to binary format\r\n  const convert = (menuImg) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.readAsDataURL(menuImg);//reading the url and coverting to binary data \r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result)\r\n      };\r\n      fileReader.onerror = ((error) => {\r\n        reject(error)\r\n      })\r\n\r\n\r\n    })\r\n  }\r\n\r\n\r\n  //on submit the data get inserted to database or existing data get updated\r\n  const submit = (event) => {\r\n    event.preventDefault()\r\n\r\n    let val = validation()//validation check\r\n\r\n    if (val) {\r\n\r\n      var obj = { name: name, address: address, opening: opening, closing: closing, phone: phone, menu: JSON.stringify(menu) }\r\n\r\n      //for updating existing restaurant details\r\n      if (flag) {\r\n\r\n        Axios.put(`http://localhost:1337/restaurant/${id}`, obj).then(response =>\r\n          console.log(response))\r\n\r\n      }\r\n\r\n      else {\r\n\r\n        Axios.post('http://localhost:1337/restaurant', obj).then(response =>\r\n          console.log(response)\r\n        )\r\n        setFlag(false)\r\n      }\r\n      toggleModal()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  //handler to maintain input values in state \r\n  const handler = (event) => {\r\n    if (event.target.name == \"name\") {\r\n      setName(event.target.value)\r\n    }\r\n    else if (event.target.name == \"address\") {\r\n      setAddress(event.target.value)\r\n    }\r\n\r\n    else if (event.target.name == \"opening\") {\r\n      setOpening(event.target.value)\r\n    }\r\n\r\n    else if (event.target.name == \"closing\") {\r\n      setClosing(event.target.value)\r\n    }\r\n\r\n    else if (event.target.name == \"phone\") {\r\n      setPhone(event.target.value)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //on clicking add button add method changes the state values of defaults\r\n  const add = () => {\r\n    defaultData()\r\n    toggleModal()\r\n    setFlag(false)\r\n  }\r\n\r\n\r\n\r\n  //to changing states of restuarnt details to default values\r\n  const defaultData = () => {\r\n    setId('')\r\n    setName('')\r\n    setAddress('')\r\n    setOpening('')\r\n    setClosing('')\r\n    setPhone('')\r\n    setMenu('')\r\n\r\n  }\r\n\r\n\r\n  //validations to check data inserted are valid or not\r\n  const validation = () => {\r\n\r\n    //for restaurant name validation\r\n    if (!name.match(\"[a-zA-Z]{2,}\")) {\r\n      alert(\"restaurant name must be provided\")\r\n      return false\r\n    }\r\n\r\n    // for mobile number validation\r\n    else if (!phone.match(\"[789][0-9]{9}\")) {\r\n      alert(\"Invalid Number\");\r\n      return false\r\n    }\r\n\r\n    //for time validation\r\n    else if (opening == \"\") {\r\n      alert(\"Mention Opening time\");\r\n      return false\r\n    }\r\n\r\n    else if (closing == \"\") {\r\n      alert(\"mention closing time\");\r\n      return false\r\n    }\r\n\r\n\r\n    return true\r\n  }\r\n\r\n\r\n\r\n  //for re-redering restaurant data on state change\r\n  useEffect(() => {\r\n    Axios.get('http://localhost:1337/restaurant').then(response =>\r\n      setData(response.data))\r\n\r\n  }, [delet, submit,toggleModal,flag])\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <img src=\"https://img.icons8.com/ios-glyphs/30/000000/admin-settings-male.png\" />\r\n\r\n      <button className=\"btn btn-success add\" onClick={add} >Add Restaurant</button>\r\n\r\n      <Link to=\"/\"><img src=\"https://img.icons8.com/ios-filled/50/000000/sign-in-form-password.png\" /></Link>\r\n\r\n      <table class=\"table table-striped\">\r\n\r\n        <thead>\r\n\r\n          <tr>\r\n            <th>Restaurant Name</th>\r\n            <th>Timing</th>\r\n            <th>Updated Time</th>\r\n            <th colSpan=\"2\">Actions</th>\r\n          </tr>\r\n\r\n        </thead>\r\n\r\n        <tbody>\r\n\r\n          {data.map(restaurant => (\r\n            <tr key={restaurant.id}>\r\n              <td>{restaurant.name}</td>\r\n              <td>{restaurant.restaurantDetail.opening}-{restaurant.restaurantDetail.closing}</td>\r\n              <td>{restaurant.updatedAt}</td>\r\n              <td><button className=\"btn btn-outline-success\" onClick={() => edit(restaurant)}>Edit</button></td>\r\n              <td><button className=\"btn btn-outline-danger\" onClick={() => delet(restaurant.id)}>Delete</button></td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n\r\n      <MDBModal isOpen={modal} toggle={toggleModal}>\r\n        <MDBModalHeader className=\"text-center\" titleClass=\"w-100 font-weight-bold\" toggle={toggleModal}>\r\n\r\n          {flag ? \"Update Restaurant\" : \"Add Restaurant\"}\r\n\r\n        </MDBModalHeader>\r\n\r\n        <MDBModalBody>\r\n\r\n          <form>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Restaurant Name</label>\r\n              <input type=\"text\" class=\"form-control\" aria-describedby=\"emailHelp\" value={name} name=\"name\" onChange={handler} required />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Address</label>\r\n              <input type=\"text\" class=\"form-control\" value={address} name=\"address\" onChange={handler} />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Phone</label>\r\n              <input type=\"text\" class=\"form-control\" value={phone} name=\"phone\" onChange={handler} />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Opening:</label>\r\n              <TimePicker value={opening} onChange={setOpening} />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Closing:</label>\r\n              <TimePicker value={closing} onChange={setClosing} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Menu</label>\r\n              <input type=\"file\" onChange={(e) => { imgupload(e); }} accept=\"image/png, image/jpeg,image/jpg\" /><br /><br />\r\n              {menu!=''?<img src={menu} className=\"preview\"/>:\"\"}\r\n            </div>\r\n\r\n            {flag ? <button type=\"submit\" class=\"btn btn-success btn-block\" onClick={submit}>Update</button> : <button type=\"submit\" class=\"btn btn-success btn-block\" onClick={submit}>Add</button>}\r\n\r\n          </form>\r\n\r\n        </MDBModalBody>\r\n\r\n        <MDBModalFooter className=\"justify-content-center\">\r\n          zonions @copyright by wishtree\r\n        </MDBModalFooter>\r\n\r\n      </MDBModal>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPage\r\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":2,"column":31,"nodeType":"90","messageId":"91","endLine":2,"endColumn":38},{"ruleId":"88","severity":1,"message":"93","line":2,"column":40,"nodeType":"90","messageId":"91","endLine":2,"endColumn":45},{"ruleId":"88","severity":1,"message":"94","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":25},{"ruleId":"88","severity":1,"message":"96","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":15},{"ruleId":"88","severity":1,"message":"97","line":9,"column":17,"nodeType":"90","messageId":"91","endLine":9,"endColumn":23},{"ruleId":"88","severity":1,"message":"98","line":18,"column":10,"nodeType":"90","messageId":"91","endLine":18,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":18,"column":16,"nodeType":"90","messageId":"91","endLine":18,"endColumn":23},{"ruleId":"88","severity":1,"message":"100","line":19,"column":9,"nodeType":"90","messageId":"91","endLine":19,"endColumn":14},{"ruleId":"88","severity":1,"message":"101","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":22},{"ruleId":"88","severity":1,"message":"102","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":16},{"ruleId":"88","severity":1,"message":"103","line":5,"column":54,"nodeType":"90","messageId":"91","endLine":5,"endColumn":65},{"ruleId":"88","severity":1,"message":"104","line":5,"column":67,"nodeType":"90","messageId":"91","endLine":5,"endColumn":79},{"ruleId":"88","severity":1,"message":"92","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":22,"column":8,"nodeType":"107","endLine":22,"endColumn":10,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":32,"column":25,"nodeType":"111","endLine":32,"endColumn":107},{"ruleId":"109","severity":1,"message":"110","line":33,"column":25,"nodeType":"111","endLine":33,"endColumn":87},{"ruleId":"109","severity":1,"message":"110","line":34,"column":25,"nodeType":"111","endLine":34,"endColumn":89},{"ruleId":"88","severity":1,"message":"112","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"113","line":4,"column":3,"nodeType":"90","messageId":"91","endLine":4,"endColumn":11},{"ruleId":"88","severity":1,"message":"114","line":5,"column":3,"nodeType":"90","messageId":"91","endLine":5,"endColumn":15},{"ruleId":"88","severity":1,"message":"115","line":6,"column":3,"nodeType":"90","messageId":"91","endLine":6,"endColumn":17},{"ruleId":"88","severity":1,"message":"116","line":7,"column":3,"nodeType":"90","messageId":"91","endLine":7,"endColumn":17},{"ruleId":"88","severity":1,"message":"102","line":8,"column":3,"nodeType":"90","messageId":"91","endLine":8,"endColumn":9},{"ruleId":"88","severity":1,"message":"117","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":31,"column":27,"nodeType":"120","messageId":"121","endLine":31,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":35,"column":27,"nodeType":"120","messageId":"121","endLine":35,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":45,"column":18,"nodeType":"120","messageId":"121","endLine":45,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":45,"column":51,"nodeType":"120","messageId":"121","endLine":45,"endColumn":53},{"ruleId":"88","severity":1,"message":"102","line":10,"column":3,"nodeType":"90","messageId":"91","endLine":10,"endColumn":9},{"ruleId":"88","severity":1,"message":"122","line":43,"column":7,"nodeType":"90","messageId":"91","endLine":43,"endColumn":12},{"ruleId":"88","severity":1,"message":"123","line":45,"column":7,"nodeType":"90","messageId":"91","endLine":45,"endColumn":11},{"ruleId":"105","severity":1,"message":"124","line":49,"column":9,"nodeType":"125","endLine":52,"endColumn":4,"suggestions":"126"},{"ruleId":"105","severity":1,"message":"127","line":58,"column":9,"nodeType":"125","endLine":64,"endColumn":4,"suggestions":"128"},{"ruleId":"105","severity":1,"message":"129","line":116,"column":9,"nodeType":"125","endLine":147,"endColumn":4,"suggestions":"130"},{"ruleId":"118","severity":1,"message":"119","line":153,"column":27,"nodeType":"120","messageId":"121","endLine":153,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":156,"column":32,"nodeType":"120","messageId":"121","endLine":156,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":160,"column":32,"nodeType":"120","messageId":"121","endLine":160,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":164,"column":32,"nodeType":"120","messageId":"121","endLine":164,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":168,"column":32,"nodeType":"120","messageId":"121","endLine":168,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":214,"column":22,"nodeType":"120","messageId":"121","endLine":214,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":219,"column":22,"nodeType":"120","messageId":"121","endLine":219,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":244,"column":7,"nodeType":"111","endLine":244,"endColumn":88},{"ruleId":"109","severity":1,"message":"110","line":248,"column":20,"nodeType":"111","endLine":248,"endColumn":103},{"ruleId":"118","severity":1,"message":"131","line":319,"column":20,"nodeType":"120","messageId":"121","endLine":319,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":319,"column":25,"nodeType":"111","endLine":319,"endColumn":62},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Route' is defined but never used.","'HomePage' is defined but never used.","'RestaurantDetails' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'flag' is assigned a value but never used.","'setflag' is assigned a value but never used.","'login' is assigned a value but never used.","'restaurantIcon' is defined but never used.","'MDBBtn' is defined but never used.","'MDBCardText' is defined but never used.","'MDBCardTitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'MDBModal' is defined but never used.","'MDBModalBody' is defined but never used.","'MDBModalHeader' is defined but never used.","'MDBModalFooter' is defined but never used.","'AdminPage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'valid' is assigned a value but never used.","'link' is assigned a value but never used.","The 'toggleModal' function makes the dependencies of useEffect Hook (at line 235) change on every render. To fix this, wrap the definition of 'toggleModal' in its own useCallback() Hook.","VariableDeclarator",["135"],"The 'delet' function makes the dependencies of useEffect Hook (at line 235) change on every render. To fix this, wrap the definition of 'delet' in its own useCallback() Hook.",["136"],"The 'submit' function makes the dependencies of useEffect Hook (at line 235) change on every render. To fix this, wrap the definition of 'submit' in its own useCallback() Hook.",["137"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [match.params.id]",{"range":"146","text":"147"},"Wrap the definition of 'toggleModal' in its own useCallback() Hook.",{"range":"148","text":"149"},"Wrap the definition of 'delet' in its own useCallback() Hook.",{"range":"150","text":"151"},"Wrap the definition of 'submit' in its own useCallback() Hook.",{"range":"152","text":"153"},[759,761],"[match.params.id]",[1024,1060],"useCallback(() => {\r\n    setModal(!modal)\r\n\r\n  })",[1140,1336],"useCallback((id) => {\r\n\r\n    if (window.confirm(\"Are you sure you want to delete\")) {\r\n      Axios.delete(`http://localhost:1337/restaurant/${id}`).then(response =>\r\n        console.log(response))\r\n    }\r\n  })",[2635,3288],"useCallback((event) => {\r\n    event.preventDefault()\r\n\r\n    let val = validation()//validation check\r\n\r\n    if (val) {\r\n\r\n      var obj = { name: name, address: address, opening: opening, closing: closing, phone: phone, menu: JSON.stringify(menu) }\r\n\r\n      //for updating existing restaurant details\r\n      if (flag) {\r\n\r\n        Axios.put(`http://localhost:1337/restaurant/${id}`, obj).then(response =>\r\n          console.log(response))\r\n\r\n      }\r\n\r\n      else {\r\n\r\n        Axios.post('http://localhost:1337/restaurant', obj).then(response =>\r\n          console.log(response)\r\n        )\r\n        setFlag(false)\r\n      }\r\n      toggleModal()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  })"]